"""
    ** 아이디어 - 이런건 역으로 추적하는 방식을 사용하는 것이 좋다

    굉장히 간단하게 풀어낼 수 있었다
    처음에는 DFS/BFS 문제인줄 알았지만
    거꾸로 추적할 경우 - 그리디 문제인 것 같다
"""

def solution(n):
    k = 0
    while n != 0:
        if n % 2 == 0:
            n //= 2
        else:
            n -= 1
            k += 1

    return k


# 이런 식으로 푸는 방법도 있네 (미춌다)
# 2씩 나누는게 결국엔 왼쪽으로 한칸씩 쉬프트 때리는데,
# 이 과정에서 첫째자리에 1이 있으면 홀수가 되니까 그냥 1 갯수를 카운트하면 점프해야하는 수가 나오는 것 이라고 한다
def solution1(n):
    return bin(n).count('1')